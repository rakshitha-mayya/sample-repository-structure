name: Deploy AKS

on:
  workflow_dispatch:
    inputs:
      aks_cluster_name:
        description: "Enter AKS Cluster Name"
        required: false
        # default: "az-pe-cluster"
      resource_group_name:
        description: "Enter the Azure Resource Group Name"
        required: false
        # default: "az-pe-cluster"
      action:
        description: "action"
        required: true
        default: "plan"
        type: choice
        options:
          - "plan"
          - "apply"
          - "destroy"
            
env:
  TF_VERSION: 1.5.0
  
jobs:
  terraform:
    permissions: write-all
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        # working-directory: Infrastructure

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    # - name: Azure Login
    #   uses: azure/login@v1
    #   with:
    #     creds: |
    #       {
    #           "clientId": "ee06da01-52ef-42c9-8665-03fd349d4fc9",
    #           "clientSecret": "Vgx8Q~88RhqDiEUdTSuTqBoMprucBN-_jVwaRbRt",
    #           "subscriptionId": "1fe9d6c6-7bd9-49ef-9ee9-04c91c284767",
    #           "tenantId": "c3c8c18c-2d1f-4023-bb9c-11a8b40799f0",
    #           "activeDirectoryEndpointUrl": "https://login.microsoftonline.com",
    #           "resourceManagerEndpointUrl": "https://management.azure.com/",
    #           "activeDirectoryGraphResourceId": "https://graph.windows.net/",
    #           "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/",
    #           "galleryEndpointUrl": "https://gallery.azure.com/",
    #           "managementEndpointUrl": "https://management.core.windows.net/"
    #         }

    - name: Set Terraform environment variables
      run: |
        echo "ARM_CLIENT_ID=ee06da01-52ef-42c9-8665-03fd349d4fc9" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=Vgx8Q~88RhqDiEUdTSuTqBoMprucBN-_jVwaRbRt" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=1fe9d6c6-7bd9-49ef-9ee9-04c91c284767" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=c3c8c18c-2d1f-4023-bb9c-11a8b40799f0" >> $GITHUB_ENV

    - name: Terraform Init
      id: init
      run: |
        echo "$PWD"
        cd $PWD/Infrastructure/terraform
        terraform init

    - name: Terraform Validate
      id: validate
      run: |
        cd $PWD/Infrastructure
        terraform validate -no-color

    - name: Terraform Plan
      if: inputs.action == 'plan'
      id: plan
      run: |
        cd $PWD/Infrastructure/terraform
        # terraform plan -no-color -input=false
        terraform plan \
          -input=false \
          -var="resource_group_name=${{ github.event.inputs.resource_group_name }}" \
          -var="aks_cluster_name=${{ github.event.inputs.aks_cluster_name }}"
  
    - name: Terraform Apply
      if: inputs.action == 'apply'
      run: |
        cd $PWD/Infrastructure/terraform
        terraform apply -auto-approve \
          -input=false \
          -var="resource_group_name=${{ github.event.inputs.resource_group_name }}" \
          -var="aks_cluster_name=${{ github.event.inputs.aks_cluster_name }}"
        
    - name: Terraform destroy
      if: inputs.action == 'destroy'
      run: |
        cd $PWD/Infrastructure/terraform
        terraform destroy -auto-approve -input=false
